{"ast":null,"code":"var _jsxFileName = \"/var/www/html/React/todo-app/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        text: e.target.value\n      });\n    };\n\n    this.handleSearch = e => {\n      this.setState({\n        filtertext: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.text.length === 0) {\n        return;\n      }\n\n      const newItem = {\n        text: this.state.text,\n        id: Date.now()\n      };\n      this.setState(state => ({\n        items: state.items.concat(newItem),\n        text: ''\n      }));\n    };\n\n    this.state = {\n      items: [],\n      text: '',\n      filtertext: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"TODO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"new-todo\",\n          children: \"What needs to be done?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"new-todo\",\n          placeholder: \"Add a new task\",\n          onChange: this.handleChange,\n          value: this.state.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: [\"Add #\", this.state.items.length + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"new-todo-search\",\n          placeholder: \"Search a Task\",\n          onChange: this.handleSearch,\n          value: this.state.filtertext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        items: this.state.items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TodoList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onClickClose = e => {\n      alert('dfdf');\n      const updatedItems = {\n        text: 'delete',\n        id: Date.now()\n      };\n      this.setState(state => ({\n        items: state.items.concat(updatedItems),\n        text: ''\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Finished Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: this.props.items.map(item => {\n          if (this.props.items.includes(this.props.items.filtertext)) {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.text\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 11\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"close\",\n                  onClick: this.onClickClose,\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 51\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 12\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/React/todo-app/src/App.js"],"names":["React","App","Component","constructor","props","handleChange","e","setState","text","target","value","handleSearch","filtertext","handleSubmit","preventDefault","state","length","newItem","id","Date","now","items","concat","render","TodoList","onClickClose","alert","updatedItems","map","item","includes"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { items: [], text: '',filtertext:'' };\n\n\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>TODO</h3>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"new-todo\">\n            What needs to be done?\n          </label>\n          <input\n            id=\"new-todo\"\n            placeholder=\"Add a new task\"\n            onChange={this.handleChange}\n            value={this.state.text}\n          />\n           <button>\n            Add #{this.state.items.length + 1}\n          </button>\n            <input\n            id=\"new-todo-search\"\n            placeholder=\"Search a Task\"\n            onChange={this.handleSearch}\n            value={this.state.filtertext}\n          />\n          \n    \n        </form>\n        <TodoList items={this.state.items} />\n\n      </div>\n    );\n  }\n  handleChange = (e) => {\n    this.setState({ text: e.target.value });\n  }\n  handleSearch = (e) => {\n    this.setState({ filtertext: e.target.value });\n  }\n  handleSubmit=(e)=> {\n    e.preventDefault();\n    if (this.state.text.length === 0) {\n      return;\n    }\n    const newItem = {\n      text: this.state.text,\n      id: Date.now()\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n  }\n}\n\nclass TodoList extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = { items: [], text: '' };\n\n\n  // }\n  onClickClose=(e)=> {\n    alert('dfdf');\n    const updatedItems = {\n      text: 'delete',\n      id: Date.now()\n    };\n    this.setState(state => ({\n      items: state.items.concat(updatedItems),\n      text: ''\n    }));\n  }\n  render() {\n    return (\n      <table>\n        <thead>\n          <th>Todos</th>\n          <th>Finished Todo</th>\n        </thead>\n        <tbody>\n\n        {this.props.items.map((item) => {\n         \n\n          if(this.props.items.includes(this.props.items.filtertext)){\n            return(\n           <tr>\n          <td key={item.id}>{item.text}</td> <td> <button type=\"button\" className=\"close\" onClick={this.onClickClose}>&times;</button></td>\n          </tr>  );}\n  })}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}