{"ast":null,"code":"var _jsxFileName = \"/var/www/html/React/todo-app/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        text: e.target.value\n      });\n    };\n\n    this.state = {\n      items: [],\n      text: ''\n    }; //this.handleChange = this.handleChange.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"TODO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"new-todo\",\n          children: \"What needs to be done?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"new-todo\",\n          placeholder: \"Add a new task\",\n          onChange: this.handleChange,\n          value: this.state.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: [\"Add #\", this.state.items.length + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        items: this.state.items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.text.length === 0) {\n      return;\n    }\n\n    const newItem = {\n      text: this.state.text,\n      id: Date.now()\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n  }\n\n}\n\nclass TodoList extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.props.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.text\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/React/todo-app/src/App.js"],"names":["React","App","Component","constructor","props","handleChange","e","setState","text","target","value","state","items","handleSubmit","bind","render","length","preventDefault","newItem","id","Date","now","concat","TodoList","map","item"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA8BnBC,YA9BmB,GA8BHC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAjB,OAAd;AACD,KAhCkB;;AAEjB,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaJ,MAAAA,IAAI,EAAE;AAAnB,KAAb,CAFiB,CAGjB;;AACA,SAAKK,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAE,KAAKF,YAArB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AACE,UAAA,EAAE,EAAC,UADL;AAEE,UAAA,WAAW,EAAC,gBAFd;AAGE,UAAA,QAAQ,EAAE,KAAKR,YAHjB;AAIE,UAAA,KAAK,EAAE,KAAKM,KAAL,CAAWH;AAJpB;AAAA;AAAA;AAAA;AAAA,gBAJF,eAUE;AAAA,8BACQ,KAAKG,KAAL,CAAWC,KAAX,CAAiBI,MAAjB,GAA0B,CADlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAgBE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC;AAA5B;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AAKDC,EAAAA,YAAY,CAACP,CAAD,EAAI;AACdA,IAAAA,CAAC,CAACW,cAAF;;AACA,QAAI,KAAKN,KAAL,CAAWH,IAAX,CAAgBQ,MAAhB,KAA2B,CAA/B,EAAkC;AAChC;AACD;;AACD,UAAME,OAAO,GAAG;AACdV,MAAAA,IAAI,EAAE,KAAKG,KAAL,CAAWH,IADH;AAEdW,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAFU,KAAhB;AAIA,SAAKd,QAAL,CAAcI,KAAK,KAAK;AACtBC,MAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYU,MAAZ,CAAmBJ,OAAnB,CADe;AAEtBV,MAAAA,IAAI,EAAE;AAFgB,KAAL,CAAnB;AAID;;AAhD+B;;AAmDlC,MAAMe,QAAN,SAAuBvB,KAAK,CAACE,SAA7B,CAAuC;AACrCa,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,gBACG,KAAKX,KAAL,CAAWQ,KAAX,CAAiBY,GAAjB,CAAqBC,IAAI,iBACxB;AAAA,kBAAmBA,IAAI,CAACjB;AAAxB,SAASiB,IAAI,CAACN,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAToC;;AAYvC,eAAelB,GAAf","sourcesContent":["import './App.css';\nimport React from 'react';\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { items: [], text: '' };\n    //this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>TODO</h3>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"new-todo\">\n            What needs to be done?\n          </label>\n          <input\n            id=\"new-todo\"\n            placeholder=\"Add a new task\"\n            onChange={this.handleChange}\n            value={this.state.text}\n          />\n          <button>\n            Add #{this.state.items.length + 1}\n          </button>\n        </form>\n        <TodoList items={this.state.items} />\n\n      </div>\n    );\n  }\n  handleChange = (e) => {\n    this.setState({ text: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.text.length === 0) {\n      return;\n    }\n    const newItem = {\n      text: this.state.text,\n      id: Date.now()\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n  }\n}\n\nclass TodoList extends React.Component {\n  render() {\n    return (\n      <ul>\n        {this.props.items.map(item => (\n          <li key={item.id}>{item.text}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}