{"ast":null,"code":"var _jsxFileName = \"/var/www/html/React/todo-app/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        text: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.text.length === 0) {\n        return;\n      }\n\n      const newItem = {\n        text: this.state.text,\n        id: Date.now()\n      };\n      this.setState(state => ({\n        items: state.items.concat(newItem),\n        text: ''\n      }));\n    };\n\n    this.state = {\n      items: [],\n      text: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"TODO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"new-todo\",\n          children: \"What needs to be done?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"new-todo\",\n          placeholder: \"Add a new task\",\n          onChange: this.handleChange,\n          value: this.state.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: [\"Add #\", this.state.items.length + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        items: this.state.items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass TodoList extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Finished Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: this.props.items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.text\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              children: \"Delete \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/React/todo-app/src/App.js"],"names":["React","App","Component","constructor","props","handleChange","e","setState","text","target","value","handleSubmit","preventDefault","state","length","newItem","id","Date","now","items","concat","render","TodoList","map","item"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA6BnBC,YA7BmB,GA6BHC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAjB,OAAd;AACD,KA/BkB;;AAAA,SAuCnBC,YAvCmB,GAuCLL,CAAD,IAAM;AACjBA,MAAAA,CAAC,CAACM,cAAF;;AACA,UAAI,KAAKC,KAAL,CAAWL,IAAX,CAAgBM,MAAhB,KAA2B,CAA/B,EAAkC;AAChC;AACD;;AACD,YAAMC,OAAO,GAAG;AACdP,QAAAA,IAAI,EAAE,KAAKK,KAAL,CAAWL,IADH;AAEdQ,QAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAFU,OAAhB;AAIA,WAAKX,QAAL,CAAcM,KAAK,KAAK;AACtBM,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBL,OAAnB,CADe;AAEtBP,QAAAA,IAAI,EAAE;AAFgB,OAAL,CAAnB;AAID,KApDkB;;AAEjB,SAAKK,KAAL,GAAa;AAAEM,MAAAA,KAAK,EAAE,EAAT;AAAaX,MAAAA,IAAI,EAAE;AAAnB,KAAb;AAED;;AAEDa,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,QAAQ,EAAE,KAAKV,YAArB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AACE,UAAA,EAAE,EAAC,UADL;AAEE,UAAA,WAAW,EAAC,gBAFd;AAGE,UAAA,QAAQ,EAAE,KAAKN,YAHjB;AAIE,UAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWL;AAJpB;AAAA;AAAA;AAAA;AAAA,gBAJF,eAUE;AAAA,8BACQ,KAAKK,KAAL,CAAWM,KAAX,CAAiBL,MAAjB,GAA0B,CADlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAgBE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWM;AAA5B;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AA7B+B;;AAwDlC,MAAMG,QAAN,SAAuBtB,KAAK,CAACE,SAA7B,CAAuC;AACrCmB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,kBACC,KAAKjB,KAAL,CAAWe,KAAX,CAAiBI,GAAjB,CAAqBC,IAAI,iBACxB;AAAA,kCACA;AAAA,sBAAmBA,IAAI,CAAChB;AAAxB,aAASgB,IAAI,CAACR,EAAd;AAAA;AAAA;AAAA;AAAA,kBADA,oBACmC;AAAA,yCAAK;AAAQ,cAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,kBADnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AADD;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAjBoC;;AAoBvC,eAAef,GAAf","sourcesContent":["import './App.css';\nimport React from 'react';\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { items: [], text: '' };\n\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>TODO</h3>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"new-todo\">\n            What needs to be done?\n          </label>\n          <input\n            id=\"new-todo\"\n            placeholder=\"Add a new task\"\n            onChange={this.handleChange}\n            value={this.state.text}\n          />\n          <button>\n            Add #{this.state.items.length + 1}\n          </button>\n        </form>\n        <TodoList items={this.state.items} />\n\n      </div>\n    );\n  }\n  handleChange = (e) => {\n    this.setState({ text: e.target.value });\n  }\n  // handleDelete = (inde) => {\n  //   console.log(inde);\n  //   ///const filteredItems = this.state.todos.filter(x => x.Id !== todo.Id);\n  //   // this.setState({\n  //   //      items: filteredItems\n  //   // });\n  // } \n  handleSubmit=(e)=> {\n    e.preventDefault();\n    if (this.state.text.length === 0) {\n      return;\n    }\n    const newItem = {\n      text: this.state.text,\n      id: Date.now()\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n  }\n}\n\nclass TodoList extends React.Component {\n  render() {\n    return (\n      <table>\n        <thead>\n          <th>Todos</th>\n          <th>Finished Todo</th>\n        </thead>\n        <tbody>\n        {this.props.items.map(item => ( \n          <tr>\n          <td key={item.id}>{item.text}</td> <td> <button className=\"btn btn-primary\" >Delete </button></td>\n          </tr>\n        ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}